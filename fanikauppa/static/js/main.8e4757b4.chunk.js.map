{"version":3,"sources":["img/hoodie.png","img/cap.png","img/beanie.png","img/t-shirt.png","components/Product.js","components/Cart.js","components/data/products_data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Product","product","addToCart","className","src","url","alt","name","price","onClick","id","Products","products","setProducts","tempProducts","map","amount","key","Cart","removeFromCart","Carts","carts","setCarts","result","filter","cart","reduce","a","b","removeAllFromCart","type","require","App","useState","showCart","setShowCart","showSummary","setShowSummary","page","setPage","product_catalog","email","phone","street","city","zip","newSummary","setNewSummary","changeHandler","event","field","tempSummary","target","value","onSubmit","e","preventDefault","handleSubmit","onChange","required","disabled","window","scrollTo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e4757b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hoodie.b532bf0c.png\";","module.exports = __webpack_public_path__ + \"static/media/cap.5fdb5111.png\";","module.exports = __webpack_public_path__ + \"static/media/beanie.0a9192e5.png\";","module.exports = __webpack_public_path__ + \"static/media/t-shirt.57aaa0b5.png\";","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Product = ({ product, addToCart }) => {\r\n\r\n    return (\r\n        <div className=\"product-container\">\r\n            <div className=\"img-container\">\r\n                <img className=\"product-img\" src={product.url} alt=\"kuva\" />\r\n            </div>\r\n            <p>{product.name}</p>\r\n            <p>{product.price} €</p>\r\n            <button className=\"btnAdd\" onClick={() => addToCart(product.id)}>Lisää ostoskoriin</button><br></br>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Products = ({ products, setProducts }) => {\r\n\r\n    const addToCart = (id) => {\r\n        const tempProducts = products.map(product => {\r\n            if (product.id === id) {\r\n                const tempProduct = { ...product, amount: product.amount + 1 }\r\n                return tempProduct;\r\n            } else {\r\n                return product;\r\n            }\r\n        })\r\n        setProducts(tempProducts);\r\n    }\r\n\r\n    return (\r\n        <div className=\"default-div\">\r\n            <div className=\"product-div\">\r\n                {products.map(product => <Product key={product.id} product={product} addToCart={addToCart} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Cart = ({ product, removeFromCart }) => {\r\n\r\n    return (\r\n\r\n        <tr className=\"cart-th\">\r\n            <td>{product.name}</td>\r\n            <td>{product.price * product.amount} €</td>\r\n            <td>{product.amount}<button onClick={() => removeFromCart(product.id)}>-</button></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nconst Carts = ({ carts, setCarts }) => {\r\n\r\n    const removeFromCart = (id) => {\r\n        const tempProducts = carts.map(product => {\r\n            if (product.id === id) {\r\n                const tempProduct = { ...product, amount: product.amount - 1 }\r\n                return tempProduct;\r\n            } else {\r\n                return product;\r\n            }\r\n        })\r\n        setCarts(tempProducts);\r\n    }\r\n\r\n    const removeAllFromCart = () => {\r\n        const tempProducts = carts.map(product => {\r\n            const tempProduct = { ...product, amount: 0 }\r\n            return tempProduct;\r\n        })\r\n        setCarts(tempProducts);\r\n    }\r\n\r\n    const cartTotal = () => {\r\n        return carts.map(product => product.price * product.amount).reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    const result = carts.filter(cart => cart.amount > 0);\r\n\r\n    return (\r\n        <tbody>\r\n            {result.map(cart => <Cart key={cart.id} product={cart} removeFromCart={removeFromCart} />)}\r\n            <tr className=\"cart-th\">\r\n                <td></td>\r\n                <td>\r\n                    <br /><b>Yhteensä: {cartTotal()} €</b><br /><br />\r\n                    <button className=\"btnAdd\" onClick={() => removeAllFromCart()}>Tyhjennä</button>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Carts;","const product1 = { id: 1, name: \"Huppari\", type: \"clothing\", price: 60, amount: 0, url: require('../../img/hoodie.png') };\r\nconst product2 = { id: 2, name: \"Lippis\", type: \"clothing\", price: 20, amount: 0, url: require('../../img/cap.png') };\r\nconst product3 = { id: 3, name: \"Pipo\", type: \"clothing\", price: 25, amount: 0, url: require('../../img/beanie.png') };\r\nconst product4 = { id: 4, name: \"T-paita\", type: \"clothing\", price: 35, amount: 0, url: require('../../img/t-shirt.png') };\r\n\r\nconst products = [product1, product2, product3, product4];\r\n\r\nexport default products;","import React, { useState } from 'react';\r\nimport Products from './components/Product';\r\nimport Carts from './components/Cart';\r\nimport product_catalog from './components/data/products_data'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    const [showCart, setShowCart] = useState(false);\r\n    const [showSummary, setShowSummary] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const [products, setProducts] = useState(product_catalog);\r\n    const [newSummary, setNewSummary] = useState({ name: \"\", email: \"\", phone: \"\", street: \"\", city: \"\", zip: \"\" });\r\n\r\n    const changeHandler = (event, field) => {\r\n        const tempSummary = { ...newSummary };\r\n        tempSummary[field] = event.target.value;\r\n        setNewSummary(tempSummary);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const clearSummary = () => {\r\n        setNewSummary({ name: \"\", email: \"\", phone: \"\", street: \"\", city: \"\", zip: \"\" });\r\n        window.scrollTo(0, 0); \r\n    }\r\n\r\n    const removeAllFromCart = () => {\r\n        const tempProducts = products.map(product => {\r\n            const tempProduct = { ...product, amount: 0 }\r\n            return tempProduct;\r\n        })\r\n        setProducts(tempProducts);\r\n    }\r\n\r\n    const cartTotal = () => {\r\n        return products.map(product => product.price * product.amount).reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h2 className=\"header-text\">FANIKAUPPA</h2>\r\n            </header>\r\n            <div className=\"img-content\">\r\n                <div className=\"img-overlay\">\r\n\r\n                    <Products products={products} setProducts={setProducts} />\r\n\r\n                    <button className=\"cart-btn\" onClick={() => { setShowCart(!showCart) }}>{showCart ? \"Piilota Ostoskori\" : \"Näytä Ostoskori\"}</button><br></br><br></br>\r\n                </div>\r\n            </div>\r\n\r\n            {showCart && page === 0 &&\r\n                <div className=\"content\">\r\n                    <h2 className=\"header-text\">Ostoskori</h2>\r\n                    <div className=\"cart-div\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr className=\"cart-th\">\r\n                                    <th className=\"cart-th\">Tuote</th>\r\n                                    <th className=\"cart-th\">Hinta</th>\r\n                                    <th className=\"cart-th\">Kpl</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <Carts carts={products} setCarts={setProducts} />\r\n                        </table><br /><br />\r\n                        {cartTotal() > 0 &&\r\n                            <button className=\"order-btn\" onClick={() => { setPage(1) }}>Tilaa</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {page === 1 &&\r\n                <div className=\"form-div\">\r\n                    <h1>Tilauslomake</h1>\r\n                    <h2>Yhteystiedot</h2>\r\n\r\n                    <form onSubmit={e => handleSubmit(e)}>\r\n                        Nimi<br></br>\r\n                        <input onChange={e => changeHandler(e, \"name\")} type=\"text\" value={newSummary.name} required /><br></br>\r\n                        Sähköposti<br></br>\r\n                        <input onChange={e => changeHandler(e, \"email\")} type=\"email\" value={newSummary.email} required /><br></br>\r\n                        Puhelin<br></br>\r\n                        <input onChange={e => changeHandler(e, \"phone\")} type=\"text\" value={newSummary.phone} required /><br></br>\r\n\r\n                        <h2>Osoite</h2>\r\n\r\n                        Katuosoite<br></br>\r\n                        <input onChange={e => changeHandler(e, \"street\")} type=\"text\" value={newSummary.street} required /><br></br>\r\n                        Postitoimipaikka<br></br>\r\n                        <input onChange={e => changeHandler(e, \"city\")} type=\"text\" value={newSummary.city} required /><br></br>\r\n                        Postinumero<br></br>\r\n                        <input onChange={e => changeHandler(e, \"zip\")} type=\"text\" value={newSummary.zip} required /><br></br>\r\n\r\n                        <input onClick={() => { setShowSummary(!showSummary); setPage(2) }} disabled={\r\n                            !newSummary.name ||\r\n                            !newSummary.email || \r\n                            !newSummary.phone || \r\n                            !newSummary.street|| \r\n                            !newSummary.city || \r\n                            !newSummary.zip} className=\"order-btn\" type=\"submit\" value=\"Vahvista tilaus\" />\r\n                    </form>\r\n                </div>\r\n            }\r\n\r\n            {page === 2 &&\r\n                <div className=\"summary-div\">\r\n                    <h1>Yhteenveto</h1>\r\n\r\n                    Kiitos tilauksesta {newSummary.name}! <br /><br />\r\n                    Tilauksesi toimitetaan osoitteeseen:<br />\r\n                    {newSummary.street}, {newSummary.city}, {newSummary.zip} <br /><br />\r\n                    Lähetämme sinulle sähköpostia ({newSummary.email}), tilauksen etenemisestä.<br /><br />\r\n\r\n                    <button className=\"btnAdd\" onClick={() => {clearSummary(); setShowSummary(!showSummary); setShowCart(!showCart); setPage(0); removeAllFromCart() }}>Palaa takaisin</button>\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}